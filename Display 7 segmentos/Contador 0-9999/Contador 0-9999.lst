;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 07/06/2016 05:29:22 p. m.
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2816      	GOTO       22
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x0003	0x1283      	BCF        STATUS, 5
0x0004	0x1303      	BCF        STATUS, 6
0x0005	0x082B      	MOVF       ___DoICPAddr+1, 0
0x0006	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x0007	0x082A      	MOVF       ___DoICPAddr, 0
0x0008	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x0009	0x0008      	RETURN
; end of _____DoICP
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x000A	0x2003      	CALL       _____DoICP
0x000B	0x118A      	BCF        PCLATH, 3
0x000C	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x000D	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x000E	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x000F	0x0AAA      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x0010	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x0011	0x0AAB      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x0012	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x0013	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x0014	0x280A      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x0015	0x0008      	RETURN
; end of ___CC2DW
_main:
0x0016	0x30FA      	MOVLW      250
0x0017	0x1283      	BCF        STATUS, 5
0x0018	0x1303      	BCF        STATUS, 6
0x0019	0x00A0      	MOVWF      _numero
0x001A	0x3022      	MOVLW      34
0x001B	0x00A1      	MOVWF      33
0x001C	0x30B9      	MOVLW      185
0x001D	0x00A2      	MOVWF      34
0x001E	0x30AB      	MOVLW      171
0x001F	0x00A3      	MOVWF      35
0x0020	0x3063      	MOVLW      99
0x0021	0x00A4      	MOVWF      36
0x0022	0x30CB      	MOVLW      203
0x0023	0x00A5      	MOVWF      37
0x0024	0x30DB      	MOVLW      219
0x0025	0x00A6      	MOVWF      38
0x0026	0x30A2      	MOVLW      162
0x0027	0x00A7      	MOVWF      39
0x0028	0x30FB      	MOVLW      251
0x0029	0x00A8      	MOVWF      40
0x002A	0x30E3      	MOVLW      227
0x002B	0x00A9      	MOVWF      41
;Contador 0-9999.c,3 :: 		void main() {
;Contador 0-9999.c,4 :: 		ANSEL=0;   //Salidas analogicas a 0
0x002C	0x1683      	BSF        STATUS, 5
0x002D	0x1703      	BSF        STATUS, 6
0x002E	0x0188      	CLRF       ANSEL
;Contador 0-9999.c,5 :: 		ANSELH=0;
0x002F	0x0189      	CLRF       ANSELH
;Contador 0-9999.c,6 :: 		PORTD=0;      //Puertos D a 0
0x0030	0x1283      	BCF        STATUS, 5
0x0031	0x1303      	BCF        STATUS, 6
0x0032	0x0188      	CLRF       PORTD
;Contador 0-9999.c,7 :: 		TRISD=0;
0x0033	0x1683      	BSF        STATUS, 5
0x0034	0x0188      	CLRF       TRISD
;Contador 0-9999.c,8 :: 		TRISC.F0=0;  //Declaramos el puerto C como salida.
0x0035	0x1007      	BCF        TRISC, 0
;Contador 0-9999.c,9 :: 		TRISC.F1=0;
0x0036	0x1087      	BCF        TRISC, 1
;Contador 0-9999.c,10 :: 		TRISC.F2=0;
0x0037	0x1107      	BCF        TRISC, 2
;Contador 0-9999.c,11 :: 		TRISC.F3=0;
0x0038	0x1187      	BCF        TRISC, 3
;Contador 0-9999.c,13 :: 		PORTC.F0=1;
0x0039	0x1283      	BCF        STATUS, 5
0x003A	0x1407      	BSF        PORTC, 0
;Contador 0-9999.c,14 :: 		PORTC.F1=1;
0x003B	0x1487      	BSF        PORTC, 1
;Contador 0-9999.c,15 :: 		PORTC.F2=1;
0x003C	0x1507      	BSF        PORTC, 2
;Contador 0-9999.c,16 :: 		PORTC.F3=1;
0x003D	0x1587      	BSF        PORTC, 3
;Contador 0-9999.c,18 :: 		unidades=0;
0x003E	0x01AC      	CLRF       _unidades
;Contador 0-9999.c,19 :: 		decenas=0;
0x003F	0x01AD      	CLRF       _decenas
;Contador 0-9999.c,20 :: 		centenas=0;
0x0040	0x01AF      	CLRF       _centenas
;Contador 0-9999.c,21 :: 		millares=0;
0x0041	0x01B0      	CLRF       _millares
;Contador 0-9999.c,22 :: 		while(1){  //Ciclo infinito para imprimir permanentemente  --->
L_main0:
;Contador 0-9999.c,23 :: 		PORTD=numero[unidades];//los datos en cada displaycorrespondiente
0x0042	0x082C      	MOVF       _unidades, 0
0x0043	0x3E20      	ADDLW      _numero
0x0044	0x0084      	MOVWF      FSR
0x0045	0x0800      	MOVF       INDF, 0
0x0046	0x0088      	MOVWF      PORTD
;Contador 0-9999.c,24 :: 		PORTC.F3=0;    //Habilitamos puerto F3 para habilitar el 4to display
0x0047	0x1187      	BCF        PORTC, 3
;Contador 0-9999.c,25 :: 		delay_ms(3);    //dejamos un tiempo para que eñ display reciba los datos
0x0048	0x3008      	MOVLW      8
0x0049	0x00FC      	MOVWF      R12
0x004A	0x30C9      	MOVLW      201
0x004B	0x00FD      	MOVWF      R13
L_main2:
0x004C	0x0BFD      	DECFSZ     R13, 1
0x004D	0x284C      	GOTO       L_main2
0x004E	0x0BFC      	DECFSZ     R12, 1
0x004F	0x284C      	GOTO       L_main2
0x0050	0x0000      	NOP
0x0051	0x0000      	NOP
;Contador 0-9999.c,26 :: 		PORTC.F3=1;     //deshabilitamos el display F3 para que no siga recibiendo datos.
0x0052	0x1587      	BSF        PORTC, 3
;Contador 0-9999.c,27 :: 		PORTD=numero[decenas];
0x0053	0x082D      	MOVF       _decenas, 0
0x0054	0x3E20      	ADDLW      _numero
0x0055	0x0084      	MOVWF      FSR
0x0056	0x0800      	MOVF       INDF, 0
0x0057	0x0088      	MOVWF      PORTD
;Contador 0-9999.c,28 :: 		PORTC.F2=0;
0x0058	0x1107      	BCF        PORTC, 2
;Contador 0-9999.c,29 :: 		delay_ms(3);
0x0059	0x3008      	MOVLW      8
0x005A	0x00FC      	MOVWF      R12
0x005B	0x30C9      	MOVLW      201
0x005C	0x00FD      	MOVWF      R13
L_main3:
0x005D	0x0BFD      	DECFSZ     R13, 1
0x005E	0x285D      	GOTO       L_main3
0x005F	0x0BFC      	DECFSZ     R12, 1
0x0060	0x285D      	GOTO       L_main3
0x0061	0x0000      	NOP
0x0062	0x0000      	NOP
;Contador 0-9999.c,30 :: 		PORTC.F2=1;
0x0063	0x1507      	BSF        PORTC, 2
;Contador 0-9999.c,31 :: 		PORTD=numero[centenas];
0x0064	0x082F      	MOVF       _centenas, 0
0x0065	0x3E20      	ADDLW      _numero
0x0066	0x0084      	MOVWF      FSR
0x0067	0x0800      	MOVF       INDF, 0
0x0068	0x0088      	MOVWF      PORTD
;Contador 0-9999.c,32 :: 		PORTC.F1=0;
0x0069	0x1087      	BCF        PORTC, 1
;Contador 0-9999.c,33 :: 		delay_ms(3);
0x006A	0x3008      	MOVLW      8
0x006B	0x00FC      	MOVWF      R12
0x006C	0x30C9      	MOVLW      201
0x006D	0x00FD      	MOVWF      R13
L_main4:
0x006E	0x0BFD      	DECFSZ     R13, 1
0x006F	0x286E      	GOTO       L_main4
0x0070	0x0BFC      	DECFSZ     R12, 1
0x0071	0x286E      	GOTO       L_main4
0x0072	0x0000      	NOP
0x0073	0x0000      	NOP
;Contador 0-9999.c,34 :: 		PORTC.F1=1;
0x0074	0x1487      	BSF        PORTC, 1
;Contador 0-9999.c,35 :: 		PORTD=numero[millares];
0x0075	0x0830      	MOVF       _millares, 0
0x0076	0x3E20      	ADDLW      _numero
0x0077	0x0084      	MOVWF      FSR
0x0078	0x0800      	MOVF       INDF, 0
0x0079	0x0088      	MOVWF      PORTD
;Contador 0-9999.c,36 :: 		PORTC.F0=0;
0x007A	0x1007      	BCF        PORTC, 0
;Contador 0-9999.c,37 :: 		delay_ms(3);
0x007B	0x3008      	MOVLW      8
0x007C	0x00FC      	MOVWF      R12
0x007D	0x30C9      	MOVLW      201
0x007E	0x00FD      	MOVWF      R13
L_main5:
0x007F	0x0BFD      	DECFSZ     R13, 1
0x0080	0x287F      	GOTO       L_main5
0x0081	0x0BFC      	DECFSZ     R12, 1
0x0082	0x287F      	GOTO       L_main5
0x0083	0x0000      	NOP
0x0084	0x0000      	NOP
;Contador 0-9999.c,38 :: 		PORTC.F0=1;
0x0085	0x1407      	BSF        PORTC, 0
;Contador 0-9999.c,39 :: 		time++;  //el time lo ocupamos por un error en los delay, por lo que ponemos
0x0086	0x0AAE      	INCF       _time, 1
;Contador 0-9999.c,40 :: 		if(time>1){  // a hacer algo al programa en lo que cumple la condicion, en este caso imprimimos los datos.
0x0087	0x3080      	MOVLW      128
0x0088	0x3A01      	XORLW      1
0x0089	0x00F0      	MOVWF      R0
0x008A	0x3080      	MOVLW      128
0x008B	0x062E      	XORWF      _time, 0
0x008C	0x0270      	SUBWF      R0, 0
0x008D	0x1803      	BTFSC      STATUS, 0
0x008E	0x28B8      	GOTO       L_main6
;Contador 0-9999.c,41 :: 		time=0;//regresamos a 0 para que pueda seguir funcionando el tiempo
0x008F	0x01AE      	CLRF       _time
;Contador 0-9999.c,42 :: 		unidades++; //aumentamos las unidades
0x0090	0x0AAC      	INCF       _unidades, 1
;Contador 0-9999.c,43 :: 		if(unidades>9){ //si las unidades llegan a mas de 9 entonces las decenas aumentan
0x0091	0x3080      	MOVLW      128
0x0092	0x3A09      	XORLW      9
0x0093	0x00F0      	MOVWF      R0
0x0094	0x3080      	MOVLW      128
0x0095	0x062C      	XORWF      _unidades, 0
0x0096	0x0270      	SUBWF      R0, 0
0x0097	0x1803      	BTFSC      STATUS, 0
0x0098	0x28B8      	GOTO       L_main7
;Contador 0-9999.c,44 :: 		decenas++;
0x0099	0x0AAD      	INCF       _decenas, 1
;Contador 0-9999.c,45 :: 		if(decenas>9){//si las decenas llegan a mas de 9 las centenas aumentan
0x009A	0x3080      	MOVLW      128
0x009B	0x3A09      	XORLW      9
0x009C	0x00F0      	MOVWF      R0
0x009D	0x3080      	MOVLW      128
0x009E	0x062D      	XORWF      _decenas, 0
0x009F	0x0270      	SUBWF      R0, 0
0x00A0	0x1803      	BTFSC      STATUS, 0
0x00A1	0x28B7      	GOTO       L_main8
;Contador 0-9999.c,46 :: 		decenas=0;
0x00A2	0x01AD      	CLRF       _decenas
;Contador 0-9999.c,47 :: 		centenas++;
0x00A3	0x0AAF      	INCF       _centenas, 1
;Contador 0-9999.c,48 :: 		if(centenas>9){ //Si las centenas centenas llegan a mas de 9 van a 0
0x00A4	0x3080      	MOVLW      128
0x00A5	0x3A09      	XORLW      9
0x00A6	0x00F0      	MOVWF      R0
0x00A7	0x3080      	MOVLW      128
0x00A8	0x062F      	XORWF      _centenas, 0
0x00A9	0x0270      	SUBWF      R0, 0
0x00AA	0x1803      	BTFSC      STATUS, 0
0x00AB	0x28B7      	GOTO       L_main9
;Contador 0-9999.c,49 :: 		centenas=0; // centenas llega a 0
0x00AC	0x01AF      	CLRF       _centenas
;Contador 0-9999.c,50 :: 		millares++;  //millares aumenta
0x00AD	0x0AB0      	INCF       _millares, 1
;Contador 0-9999.c,51 :: 		if(millares>9){ //Si los millares llegan a mas de 9
0x00AE	0x3080      	MOVLW      128
0x00AF	0x3A09      	XORLW      9
0x00B0	0x00F0      	MOVWF      R0
0x00B1	0x3080      	MOVLW      128
0x00B2	0x0630      	XORWF      _millares, 0
0x00B3	0x0270      	SUBWF      R0, 0
0x00B4	0x1803      	BTFSC      STATUS, 0
0x00B5	0x28B7      	GOTO       L_main10
;Contador 0-9999.c,52 :: 		millares=0; //millares regresa a 0
0x00B6	0x01B0      	CLRF       _millares
;Contador 0-9999.c,53 :: 		}
L_main10:
;Contador 0-9999.c,54 :: 		}
L_main9:
;Contador 0-9999.c,55 :: 		}
L_main8:
;Contador 0-9999.c,56 :: 		unidades=0;// las unidades van a 0 si llegan a mas de 9
0x00B7	0x01AC      	CLRF       _unidades
;Contador 0-9999.c,57 :: 		}
L_main7:
;Contador 0-9999.c,58 :: 		}
L_main6:
;Contador 0-9999.c,59 :: 		}
0x00B8	0x2842      	GOTO       L_main0
;Contador 0-9999.c,60 :: 		}
L_end_main:
0x00B9	0x28B9      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0003       [7]    _____DoICP
0x000A      [12]    ___CC2DW
0x0016     [164]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0007       [1]    PORTC
0x0008       [1]    PORTD
0x000A       [1]    PCLATH
0x0020      [10]    _numero
0x002A       [2]    ___DoICPAddr
0x002C       [1]    _unidades
0x002D       [1]    _decenas
0x002E       [1]    _time
0x002F       [1]    _centenas
0x0030       [1]    _millares
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0087       [1]    TRISC
0x0088       [1]    TRISD
0x0188       [1]    ANSEL
0x0189       [1]    ANSELH
